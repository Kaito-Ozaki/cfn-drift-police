// Code generated by MockGen. DO NOT EDIT.
// Source: src/application/client/cloudformation/cloudformation-client.go

// Package mock_cfncli is a generated GoMock package.
package mock_cfncli

import (
	cfndto "cfn-drift-police/src/application/dto/cloudformation"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCloudFormationClient is a mock of CloudFormationClient interface.
type MockCloudFormationClient struct {
	ctrl     *gomock.Controller
	recorder *MockCloudFormationClientMockRecorder
}

// MockCloudFormationClientMockRecorder is the mock recorder for MockCloudFormationClient.
type MockCloudFormationClientMockRecorder struct {
	mock *MockCloudFormationClient
}

// NewMockCloudFormationClient creates a new mock instance.
func NewMockCloudFormationClient(ctrl *gomock.Controller) *MockCloudFormationClient {
	mock := &MockCloudFormationClient{ctrl: ctrl}
	mock.recorder = &MockCloudFormationClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCloudFormationClient) EXPECT() *MockCloudFormationClientMockRecorder {
	return m.recorder
}

// DescribeStackDriftDetectionStatus mocks base method.
func (m *MockCloudFormationClient) DescribeStackDriftDetectionStatus(in cfndto.DescribeStackDriftDetectionStatusInput) (*cfndto.DescribeStackDriftDetectionStatusOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeStackDriftDetectionStatus", in)
	ret0, _ := ret[0].(*cfndto.DescribeStackDriftDetectionStatusOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeStackDriftDetectionStatus indicates an expected call of DescribeStackDriftDetectionStatus.
func (mr *MockCloudFormationClientMockRecorder) DescribeStackDriftDetectionStatus(in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeStackDriftDetectionStatus", reflect.TypeOf((*MockCloudFormationClient)(nil).DescribeStackDriftDetectionStatus), in)
}

// DetectStackDrift mocks base method.
func (m *MockCloudFormationClient) DetectStackDrift(in cfndto.DetectStackDriftInput) (*cfndto.DetectStackDriftOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DetectStackDrift", in)
	ret0, _ := ret[0].(*cfndto.DetectStackDriftOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DetectStackDrift indicates an expected call of DetectStackDrift.
func (mr *MockCloudFormationClientMockRecorder) DetectStackDrift(in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DetectStackDrift", reflect.TypeOf((*MockCloudFormationClient)(nil).DetectStackDrift), in)
}

// ListStacks mocks base method.
func (m *MockCloudFormationClient) ListStacks(in cfndto.ListStacksInput) (*cfndto.ListStacksOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListStacks", in)
	ret0, _ := ret[0].(*cfndto.ListStacksOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListStacks indicates an expected call of ListStacks.
func (mr *MockCloudFormationClientMockRecorder) ListStacks(in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListStacks", reflect.TypeOf((*MockCloudFormationClient)(nil).ListStacks), in)
}
